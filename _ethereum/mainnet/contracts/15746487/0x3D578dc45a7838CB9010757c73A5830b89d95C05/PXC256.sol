// SPDX-License-Identifier: MIT
pragma solidity ^0.8.12;
import "./ERC721.sol";
import "./Ownable.sol";
import "./IMetadata.sol";

// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@                                                                                                &@@@@@@@@@@@
// @@@@@@@@@@@@                                                                                                &@@@@@@@@@@@
// @@@@@@@#    @@@@@                                                                                      ,@@@@.    @@@@@@@
// @@@@@@@#    @@@@@                                                                                      ,@@@@.    @@@@@@@
// @@@@@@@#         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&         @@@@@@@
// @@@@@@@#         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&         @@@@@@@
// @@@@@@@#         @@@@@                                                                             @@@@&         @@@@@@@
// @@@@@@@#         @@@@@                                                                             @@@@&         @@@@@@@
// @@@@@@@#         @@@@@     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@     @@@@&         @@@@@@@
// @@@@@@@#         @@@@@     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@     @@@@&         @@@@@@@
// @@@@@@@#         @@@@@     @@@@%                                                         @@@@@     @@@@&         @@@@@@@
// @@@@@@@#         @@@@@     @@@@%                                                         @@@@@     @@@@&         @@@@@@@
// @@@@@@@#         @@@@@              @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.              @@@@&         @@@@@@@
// @@@@@@@#         @@@@@              @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.              @@@@&         @@@@@@@
// @@@@@@@#         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&         @@@@@@@
// @@@@@@@#         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&         @@@@@@@
// @@@@@@@#         @@@@@         ,@@@@@@@@@@@@@@                             @@@@@@@@@@@@@@          @@@@&         @@@@@@@
// @@@@@@@#         @@@@@         ,@@@@@@@@@@@@@@                             @@@@@@@@@@@@@@          @@@@&         @@@@@@@
// @@@@@@@#         @@@@@@@@@@@@@@%    @@@@@     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@    ,@@@@.    @@@@@@@@@@@@@@&         @@@@@@@
// @@@@@@@#         @@@@@@@@@@%%%%(    %%%%%     %%%%%%%%%&@@@@@@@@@%%%%%%%%%%    .%%%%     %%%%%@@@@@@@@@&         @@@@@@@
// @@@@@@@#         @@@@@@@@@@                            ,@@@@@@@@@                             @@@@@@@@@&         @@@@@@@
// @@@@@@@#         @@@@@@@@@@&&&&#    &&&&&     &&&&&&&&&@@@@@@@@@@&&&&&&&&&&    ,&&&&.    &&&&&@@@@@@@@@&         @@@@@@@
// @@@@@@@#         @@@@@@@@@@@@@@%    @@@@@     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@    ,@@@@.    @@@@@@@@@@@@@@&         @@@@@@@
// @@@@@@@#         @@@@@         ,@@@@@@@@@@@@@@                             @@@@@@@@@@@@@@          @@@@&         @@@@@@@
// @@@@@@@#         @@@@@         ,@@@@@@@@@@@@@@                             @@@@@@@@@@@@@@          @@@@&         @@@@@@@
// @@@@@@@#         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&         @@@@@@@
// @@@@@@@#         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&         @@@@@@@
// @@@@@@@#         @@@@@              @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.              @@@@&         @@@@@@@
// @@@@@@@#         @@@@@              @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.              @@@@&         @@@@@@@
// @@@@@@@#         @@@@@     @@@@%                                                         @@@@@     @@@@&         @@@@@@@
// @@@@@@@#         @@@@@     @@@@%                                                         @@@@@     @@@@&         @@@@@@@
// @@@@@@@#         @@@@@     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@     @@@@&         @@@@@@@
// @@@@@@@#         @@@@@     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@     @@@@&         @@@@@@@
// @@@@@@@#         @@@@@                                                                             @@@@&         @@@@@@@
// @@@@@@@#         @@@@@                                                                             @@@@&         @@@@@@@
// @@@@@@@#         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&         @@@@@@@
// @@@@@@@#         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&         @@@@@@@
// @@@@@@@#         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&         @@@@@@@
// @@@@@@@#         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&         @@@@@@@
// @@@@@@@#    @@@@@                                                                                      ,@@@@.    @@@@@@@
// @@@@@@@#    @@@@@                                                                                      ,@@@@.    @@@@@@@
// @@@@@@@@@@@@                                                                                                &@@@@@@@@@@@
// @@@@@@@@@@@@                                                                                                &@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//  @creator: PixelChain
//  @author: NFT Studios

contract PXC256 is ERC721, Ownable {
	struct ExtraMetadata {
		uint16 incrementalId;
		address creator;
	}

	IMetadata metadataContract;

	mapping(uint256 => ExtraMetadata) extraMetadata;
	mapping(address => string) creatorsByAddress;
	mapping(address => bool) whitelist;

	bool public openMint = false;

	uint16 public totalSupply = 0;
	uint16 public maxTokenSupply = 2048;

	constructor() ERC721("PixelChain 256", "PXC256") {}

	function setMetadataContract(address _address) external onlyOwner {
		metadataContract = IMetadata(_address);
	}

	function setCreatorNameDev(address _wallet, string calldata _name) external onlyOwner {
		creatorsByAddress[_wallet] = _name;
	}

	function toggleOpenMint() external onlyOwner {
		openMint = !openMint;
	}

	function addToWhitelist(address[] calldata _wallets) external onlyOwner {
		for (uint256 i = 0; i < _wallets.length; i++) {
			whitelist[_wallets[i]] = true;
		}
	}

	function removeFromWhitelist(address[] calldata _wallets) external onlyOwner {
		for (uint256 i = 0; i < _wallets.length; i++) {
			whitelist[_wallets[i]] = false;
		}
	}

	function isWhitelisted(address _wallet) external view returns (bool) {
		return whitelist[_wallet];
	}

	function mint(uint256 _tokenId) external {
		require(openMint || whitelist[msg.sender], "Mint is closed");
		require(totalSupply < maxTokenSupply, "No more tokens can be minted");
		_mint(msg.sender, _tokenId);
		extraMetadata[_tokenId] = ExtraMetadata(totalSupply, msg.sender);
		totalSupply++;
	}

	function exists(uint256 _tokenId) external view returns (bool) {
		return _exists(_tokenId);
	}

	function tokenURI(uint256 tokenId) public view override returns (string memory) {
		require(_exists(tokenId), "ERC721: tokenURI for nonexistent token");

		return
			metadataContract.getTokenURI(tokenId, extraMetadata[tokenId].incrementalId, extraMetadata[tokenId].creator, creatorsByAddress[extraMetadata[tokenId].creator]);
	}
}