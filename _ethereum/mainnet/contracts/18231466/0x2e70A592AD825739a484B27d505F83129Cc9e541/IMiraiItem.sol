// SPDX-License-Identifier: MIT
pragma solidity ^0.8.9;

import "./ERC1155.sol";

interface IMiraiItem {
    /**
     * @dev Event emitted when the `burnBatch` function is called.
     * @param account The address of the account that burned the tokens.
     * @param tokenId The ID of the token that is associated with the burned tokens.
     * @param ids An array of IDs of the tokens that were burned.
     * @param deadline The deadline for the transaction to be executed.
     * @param nonce A random number used to prevent replay attacks.
     * @param signature A signature generated by system owner(backend PK).
     */
    event BurnBatch(
        address indexed account,
        uint256 indexed tokenId,
        uint256[] ids,
        uint256 deadline,
        uint256 nonce,
        bytes signature
    );

    /**
     * @dev Function to set the URI for all token types.
     * @param newuri The new URI for all token types.
     * @notice should be callable only by the address has URI_SETTER_ROLE
     */
    function setURI(string memory newuri) external;

    /**
     * @dev Mint a single ERC1155 token to a specified account.
     * @param account The address of the account that will receive the token.
     * @param id The ID of the token to be minted.
     * @param amount The amount of the token to be minted.
     * @param data Additional data to be included in the minting transaction.
     */
    function mint(
        address account,
        uint256 id,
        uint256 amount,
        bytes memory data
    ) external;

    /**
     * @dev Mint multiple ERC1155 tokens to a specified account.
     * @param to The address of the account that will receive the tokens.
     * @param ids An array of IDs of the tokens to be minted.
     * @param data Additional data to be included in the minting transaction.
     */
    function mintBatch(
        address to,
        uint256[] memory ids,
        bytes memory data
    ) external;

    /**
     * @dev Burn multiple ERC1155 tokens owned by a specified account.
     * @param account The address of the account that owns the tokens to be burned.
     * @param tokenId The ID of the token that is associated with the tokens to be burned.
     * @param ids An array of IDs of the tokens to be burned.
     * @param deadline The deadline for the transaction to be executed.
     * @param signature A signature created by backend PK and signed by the account owner.
     */
    function burnBatch(
        address account,
        uint256 tokenId,
        uint256[] memory ids,
        uint256 deadline,
        bytes memory signature
    ) external;
}
