// SPDX-License-Identifier: MIT
pragma solidity ^0.8.9;

import "./ERC1155.sol";

interface IGachaEventEngine {
    /**
     * @dev Event emitted when the `execute` function is called.
     * @param user The address of the user who executed the gacha.
     * @param itemsId An array of item IDs that were obtained from the gacha.
     * @param deadline The deadline for the transaction to be executed.
     * @param nonce A random number used to prevent replay attacks.
     * @param signature A signature generated by system owner(backend PK).
     */
    event Executed(
        address indexed user,
        uint256[] itemsId,
        uint256 deadline,
        uint256 nonce,
        bytes signature
    );

    /**
     * @dev Execute the gacha engine for a specified user, using a specified number of Gacha Tickets to obtain a random selection of items.
     * @param user The address of the user who is executing the gacha.
     * @param itemsId An array of item IDs that may be obtained from the gacha.
     * @param deadline The deadline for the transaction to be executed.
     * @param signature A signature proving that the transaction was approved by the account owner.
     */
    function execute(
        address user,
        uint256[] memory itemsId,
        uint256 deadline,
        bytes memory signature
    ) external;
}
