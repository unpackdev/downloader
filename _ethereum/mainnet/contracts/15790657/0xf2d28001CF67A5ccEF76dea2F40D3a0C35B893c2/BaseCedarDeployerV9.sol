// SPDX-License-Identifier: Apache-2.0

// Generated by impl.ts. Will be overwritten.
// Filename: './BaseCedarDeployerV9.sol'

pragma solidity ^0.8.4;

import "./ICedarDeployer.sol";

/// Inherit from this base to implement introspection
abstract contract BaseCedarDeployerV9 is ICedarDeployerV9 {
    /// This needs to be public to be callable from initialize via delegatecall
    function minorVersion() virtual override public pure returns (uint256 minor, uint256 patch);

    function implementationVersion() override public pure returns (uint256 major, uint256 minor, uint256 patch) {
        (minor, patch) = minorVersion();
        major = 9;
    }

    function implementationInterfaceName() virtual override public pure returns (string memory interfaceName) {
        interfaceName = "ICedarDeployerV9";
    }

    function supportsInterface(bytes4 interfaceID) virtual override public view returns (bool) {
        return (interfaceID == type(IERC165Upgradeable).interfaceId) || ((interfaceID == type(ICedarDeployerV9).interfaceId) || ((interfaceID == type(ICedarDeployerOwnEventsV0).interfaceId) || (interfaceID == type(ICedarVersionedV1).interfaceId)));
    }
}
