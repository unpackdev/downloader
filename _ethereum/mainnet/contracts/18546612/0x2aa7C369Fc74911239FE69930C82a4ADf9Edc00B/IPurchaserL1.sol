// Copyright (C) 2023 Zerion Inc. <https://zerion.io>
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program. If not, see <https://www.gnu.org/licenses/>.
//
// SPDX-License-Identifier: LGPL-3.0-only

pragma solidity 0.8.21;

import "./IPurchaser.sol";
import "./IERC721Receiver.sol";

interface IPurchaserL1 is IPurchaser, IERC721Receiver {
    /**
     * @notice Purchase Premium and mint DNA in the same transaction
     * @param receiver Address requesting the newly minted DNA and Premium purchase
     * @param premiumType Type of premium subscription
     * @param salt Salt generated by Premium request event
     * @param signature Signature verifying the validity of function arguments
     * @dev Can be called only by the owner, can be paused
     * @dev Throws ZeroSalt error
     */
    function mintAndPurchasePremium(
        address receiver,
        uint256 premiumType,
        bytes32 salt,
        bytes memory signature
    ) external;
}
