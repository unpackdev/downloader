// SPDX-License-Identifier: Apache-2.0

// Generated by impl.ts. Will be overwritten.
// Filename: './BaseAspenCoreRegistryV1.sol'

pragma solidity ^0.8.4;

import "./IAspenCoreRegistry.sol";
import "./IAspenFeatures.sol";
import "./IAspenVersioned.sol";
import "./IGlobalConfig.sol";

/// Inherit from this base to implement introspection
abstract contract BaseAspenCoreRegistryV1 is IAspenFeaturesV1, IAspenVersionedV2, IGlobalConfigV1, IGlobalConfigV2 {
    function supportedFeatureCodes() override public pure returns (uint256[] memory features) {
        features = new uint256[](4);
        /// IAspenFeatures.sol:IAspenFeaturesV1
        features[0] = 0x6efbb19b;
        /// IAspenVersioned.sol:IAspenVersionedV2
        features[1] = 0xe4144b09;
        /// config/IGlobalConfig.sol:IGlobalConfigV1
        features[2] = 0x360da4d8;
        /// config/IGlobalConfig.sol:IGlobalConfigV2
        features[3] = 0x1622fdaf;
    }

    /// This needs to be public to be callable from initialize via delegatecall
    function minorVersion() virtual override public pure returns (uint256 minor, uint256 patch);

    function implementationVersion() override public pure returns (uint256 major, uint256 minor, uint256 patch) {
        (minor, patch) = minorVersion();
        major = 1;
    }

    function implementationInterfaceId() virtual override public pure returns (string memory interfaceId) {
        interfaceId = "impl/IAspenCoreRegistry.sol:IAspenCoreRegistryV1";
    }

    function supportsInterface(bytes4 interfaceID) virtual override public view returns (bool) {
        /// ERC165 'handshake'
        if ((interfaceID == 0x0) || (interfaceID == 0xffffffff)) return false;
        /// ERC165 itself
        if (interfaceID == 0x01ffc9a7) return true;
        /// impl/IAspenCoreRegistry.sol:IAspenCoreRegistryV1
        if (interfaceID == 0x411e9b02) return true;
        /// IAspenFeatures.sol:IAspenFeaturesV1
        if (interfaceID == 0x43c60851) return true;
        /// IAspenVersioned.sol:IAspenVersionedV2
        if (interfaceID == 0x0b2a676f) return true;
        /// config/IGlobalConfig.sol:IGlobalConfigV1
        if (interfaceID == 0x5cd5dfff) return true;
        /// config/IGlobalConfig.sol:IGlobalConfigV2
        if (interfaceID == 0x54d8e264) return true;
        /// config/IOperatorFilterersConfig.sol:IOperatorFiltererConfigV0
        if (interfaceID == 0xcb374567) return true;
        /// config/ITieredPricing.sol:ITieredPricingV0
        if (interfaceID == 0x97e29a98) return true;
        /// config/ITieredPricing.sol:ITieredPricingGettersV0
        if (interfaceID == 0x6d5723ec) return true;
        /// config/ITieredPricing.sol:ITieredPricingV1
        if (interfaceID == 0x54d8e264) return true;
        /// Otherwise not supported
        return false;
    }

    function isIAspenFeaturesV1() override public pure returns (bool) {
        return true;
    }
}
