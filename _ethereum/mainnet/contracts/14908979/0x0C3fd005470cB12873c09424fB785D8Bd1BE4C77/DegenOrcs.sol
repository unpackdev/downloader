// SPDX-License-Identifier: MIT


pragma solidity ^0.8.0;

import "./ERC721.sol";
import "./Ownable.sol";
import "./ERC721Enumerable.sol";

/*



                                              @@@   @@@@@@@#.        @@@@(@@
                                         @@@                                 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                                        @                        @       ,        @@@@@@@@@@((((((#(((((((%@@@&##@@@@@@@@@@@@
                                        @    @              @   *    @   @*@         @@@@/(((#((((((((((#(((((#&((((@@@@@@@@@
                                        @   @  @@@ *@@@@@@@@@*&@   @    @@/**@    @  @@@(((((((#((((((((((((((((((@@@@@@@@@@*
                                        @@.%  @                      . @@ @/"/@@@****((((((((((((((((((((((((((((((((@@@@@@*(
                                         @,   ,                            @@******&(@((((((((((((((((((((((((((((((((@****@@
       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    @@                             @@@@@@*@((((((((((((((((((((((((%((((((((((&***%@@
       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    @                              @@@@@@@(((((((((((&@(((((((((@(((((@(((((((@*@@@@@
       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    @ @@@###########%@@@@&         @@@@@@@@(((((((((@((@((((((((*(((%(((/#(((@&@@@@@@
       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@&%##############%#%#######@@, @@@@@@@@((((((((&(((((&(((((***@(((((((((((((@@@@@
       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@#####%#%%%%################%%@@@@@##@#@((((((((/(((((((%(@*(/******"/&%(((((@@@@@
       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@###%######&@&@@@@@&################@###@((((((((((((((((((#@@@((@@(****#(((((@@@@@
       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@@@#######@  ,.#  @#####%########@&@###@/(((((((((((((((((((((((((((((((((((&@@@@@
       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@###@@ %%# *#@@###& .%%&  #############@&&&&@@@@@%(@@((((((((((((((((((((((((((((((%@@@@@@
       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@##@@@@#####@@####%@@@#############&&&&&@##@@@@@@#((((((((((@ @/((((((((@ /(@(((@@@@@@@
       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#%@##@########%&#############%#####@####@@##@@@@@@@@@@&(((#(((((&(((&(((((@@@@@@@@@@@@@@
       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@%%@##@%&@###########################@@@@@@@@@@@&@@@@@#####%@@@%@@@@@@@@@@@@@@@@@@
       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&###############   %%################@@@@@@@@@@@@@@@@@@@@###########@@@@@@@@@@@@@@@@@
       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@  @@######%#####%###@   & &#@@@#####%%@@@@@@@@@@@@@@@@@@@@@@@@##########@@@@@@@@@@@@@@@@@
       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@/. @######@@@@%#####      @%@%%@###%%%##@##@@@@@@@@@@@@@@@@@@@@&########@@@@@@@@@@@@@@@@@
       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@     &###@%%%&@####@  . @%@%%%%@########@@#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
       @@@@@@@@@@@@@@@@@@@@@@@@@@@%%%@@#  @@@@@%%%%%@%%@%@%%@@@%%&&#####%###@@##@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@@@@@@@@@@@@
       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@%@%@%%%%&%%%@%%@%%%@%%%%%%%&@##########@@###@@@@@@@@@@@@@@@@@@@@@@@@@@@@     @@@@@@@@@@@@
       @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%%&@@@@@@%%&&&@@@%##########@@@%#####@@@@@@@@@@@@@@@@@@@@@@@@@@@     @@@@@@@@@@@@
       @@@@@@@@@@@@@@@@               @@#%###########################@@@########%%#@@@ @@@@@@@@@@@@@@@####@@     @@@@@@@@@@@@
       @@@@@@@@@@@@@@@@           @@@@@@@@########################@@@##########%%#&@    @@@@@@@@@@@@@@####@@     @@@@@@@@@@@@
       @@@@@@@@@@@@@@@@        @(  @###@@####%##################@@@#############@     @######@@@@@@@@&####@@     @@@@@@@@@@@@
       @@@@@@@@@@@@@@@@@@@@@@@@@   @###@@####################@@@##############@     @##############@@@####@@@    @@@@@@@@@@@@
       @@@@@@@@@@@@@@##########@   @#%###@@@@@@@@@@@@@@@@@@##########%######@     @#####%%#########@@@####@@#@@@@@@@@@@@@@@@@
       @@@@@@@@@@@@###########&   &##########%#############%###%##########@     @##################@@&####@@####@@@@@@@@@@@@@
       @@@@@@@@@##############@   @##############@@@@@##################@      @###################@@@####@@#%####@@@@@@@@@@@
       @@@@@@@@#########@@####    @###############@@##################@      @#####################@@@####@@####%##@@@@@@@@@@
       @@@@@@@########@@@####@    %###############@@################@       @#################%####@@@####@@%%######@@@@@@@@@
       @@@@@@#%######@@##%#@       @##############@@##############@ #&@@@  &#######################@@@####@@#%######@@@@@@@@@
       @@@@@#%%%####@@%%#%#@    %  @##############@@#############@   &    %########@@##############@@&####@@##%######@@@@@@@@
       @@@@##%######@&###%@@@#                                              @#####@@###############@@@####@@####%####@@@@@@@@
       @@@@##%#####@@###@                                                    @####@@###############@@@####@@#########@@@@@@@@
       @@@@########@&###@          .@@@@@@@@         /@@&@@(@@###@@           ###%@@###############@@&####@@##########@@@@@@@
       @@@@########@@####              @           ,@##############@          @#%#@@###############@@@####@@##########@@@@@@@
       @@@@@########@@#@               @           @@##############@           %###@@##############@@@####@@##########@@@@@@@
       @@@@@#########@@@               @            @(############@            @###@@########%#####@@@####@@##########@@@@@@@
       @@@@############@               @,             @%########@,              @@@#@@#########%%##@@@####@@##########@@@@@@@
       @@@@############@                                 @@#@@%                  @####@@#########%%@@&####@@###########@@@@@@
       @@@#############@                           @       @                      @###@@@@@########@@@####@@############&@@@@
       @@@#%%%%########@        /@@                @      ,@                       @###@@##@@&#####@@@####@@##############@@@
       @@@#############@       @.   @@@@@@  @@@&   @@@@#  @     @  @   @ @          @###@@#########@@&####@@######%#######@@@
       @@@###########%#@       @,     @@  @/    @ @@   *@ @     @  @   @*  %@(     @@#&@@@#########@@@####@@######%#######@@@
       @@@#########%##%&         @@@@@.@   @@@@@  @@@@@/  ,@@@  (  @   @.@@@@       @@@@@@@########@@@####@@####%%########@@@




*/
contract DegenOrcs is ERC721, ERC721Enumerable, Ownable {

  bool public saleIsActive = false;
  string private _baseURIextended;

  address public  constant DEV_ADDRESS = 0xE138A0A9b238b993e656360e6aEee94Ec8883F1A;
  address public   constant ARTIST_ADDRESS = 0x967D227E8792635cf084fadA1496944D9ad8A3FD;
  uint256 public constant MAX_FREE_MINT = 2500;
  uint256 public constant MAX_SUPPLY = 10000;
  uint256 public constant MAX_PUBLIC_MINT = 5;
  uint256 public constant PRICE_PER_TOKEN = 0.0069 ether;


  constructor() ERC721("DegenOrcs", "DegenOrc") {

  }





  function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal override(ERC721, ERC721Enumerable) {
    super._beforeTokenTransfer(from, to, tokenId);
  }

  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, ERC721Enumerable) returns (bool) {
    return super.supportsInterface(interfaceId);
  }

  function setBaseURI(string memory baseURI_) external onlyOwner() {
    _baseURIextended = baseURI_;
  }

  function _baseURI() internal view virtual override returns (string memory) {
    return _baseURIextended;
  }



  function setSaleState(bool newState) public onlyOwner {
    saleIsActive = newState;
  }

  function mint(uint numberOfTokens) public payable {
    uint256 ts = totalSupply();
    require(saleIsActive, "Sale must be active to mint tokens");
    require(numberOfTokens <= MAX_PUBLIC_MINT, "Exceeded max token purchase");
    require(ts + numberOfTokens <= MAX_SUPPLY, "Purchase would exceed max tokens");

    if(ts >= MAX_FREE_MINT)
      require(PRICE_PER_TOKEN * numberOfTokens <= msg.value, "Ether value sent is not correct");

    for (uint256 i = 0; i < numberOfTokens; i++) {
      _safeMint(msg.sender, ts + i);
    }
  }


  function withdraw() public onlyOwner {
    uint balance = address(this).balance / 2;

    payable(ARTIST_ADDRESS).transfer(balance);
    payable(DEV_ADDRESS).transfer(balance);

  }
}
