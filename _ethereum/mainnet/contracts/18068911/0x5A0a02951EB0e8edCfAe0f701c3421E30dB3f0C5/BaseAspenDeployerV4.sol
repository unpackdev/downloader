// SPDX-License-Identifier: Apache-2.0

// Generated by impl.ts. Will be overwritten.
// Filename: './BaseAspenDeployerV4.sol'

pragma solidity ^0.8.4;

import "./IAspenDeployer.sol";

/// Inherit from this base to implement introspection
abstract contract BaseAspenDeployerV4 is IAspenDeployerV4 {
    /// This needs to be public to be callable from initialize via delegatecall
    function minorVersion() virtual override public pure returns (uint256 minor, uint256 patch);

    function implementationVersion() override public pure returns (uint256 major, uint256 minor, uint256 patch) {
        (minor, patch) = minorVersion();
        major = 4;
    }

    function implementationInterfaceId() virtual override public pure returns (string memory interfaceId) {
        interfaceId = "deploy/IAspenDeployer.sol:IAspenDeployerV4";
    }

    function supportsInterface(bytes4 interfaceID) virtual override public view returns (bool) {
        /// ERC165 'handshake'
        if ((interfaceID == 0x0) || (interfaceID == 0xffffffff)) return false;
        /// ERC165 itself
        if (interfaceID == 0x01ffc9a7) return true;
        /// deploy/IAspenDeployer.sol:IAspenDeployerV4
        if (interfaceID == 0x489e2cff) return true;
        /// IAspenVersioned.sol:IAspenVersionedV2
        if (interfaceID == 0x0b2a676f) return true;
        /// Otherwise not supported
        return false;
    }
}
