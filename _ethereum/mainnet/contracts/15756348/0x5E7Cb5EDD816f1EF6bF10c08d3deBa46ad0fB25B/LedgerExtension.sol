// SPDX-License-Identifier: MIT
pragma solidity 0.8.13;

/// @title: Ledger
/// @author: x0r - Michael Blau

import "./ICreatorExtensionTokenURI.sol";
import "./IERC721CreatorExtensionApproveTransfer.sol";
import "./IERC721CreatorCore.sol";
import "./ERC721.sol";
import "./Ownable.sol";
import "./IASCIIGenerator.sol";

////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                            //
//                                                                                                            //
//    ....................................................................................................    //
//    ....................................................................................................    //
//    ....................................................................................................    //
//    ........................................;++*!!????????!!**+;;.......................................    //
//    .................................;+*?%$&&0101010101010101010&@$?*+;.................................    //
//    .............................;*?$&10101010101010101010101010101010&@?*;.............................    //
//    ..........................+!$&10101010101010101010101010101010101010101@?+;.........................    //
//    .......................+?@010101010101010101010101010101010101010101010101&%+.......................    //
//    ....................;*$0101010101010101010101&&&@@@@&&&0101010101010101010101@?;....................    //
//    ..................;?&0101010101010101&@%?!*+;;.........;;+*?%@&0101010101010101&%+..................    //
//    ................;?&01010101010101@%!+;.....*????????????!.....;+*%@010101010101010%+................    //
//    ...............!&1010101010101$!+..........@0101010101010;.........;*%&1010101010101%;..............    //
//    .............+@010101010101@!;.............$0101010101010;............;*$101010101010&!.............    //
//    ............?101010101010%+................$1010101010101;...............;?&01010101010$;...........    //
//    ..........;$10101010101%+..................$0101010101010;.................;!&1010101010&*..........    //
//    .........+&1010101010$+....................$1010101010101;...................;?01010101010!.........    //
//    ........*&101010101&*......................$0101010101010;.....................+$1010101010?........    //
//    .......*1010101010$;.......................$1010101010101;.......................?0101010101?.......    //
//    ......+&010101010?.........................$1010101010101;........................*&010101010!......    //
//    .....;@101010101!..........................$0101010101010;.........................+&101010101*.....    //
//    .....%010101010!...........................$1010101010101;..........................+&01010101&;....    //
//    ....*010101010%............................$1010101010101;...........................*010101010?....    //
//    ....@10101010@;............................$1010101010101;............................%010101010+...    //
//    ...*101010101*.............................$0101010101010;............................;&10101010%...    //
//    ...$10101010$..............................$101010101010&;.............................!10101010&;..    //
//    ..;&10101010*..+***************************@1010101010101!***************************..;&01010101*..    //
//    ..+01010101&;..%01010101010101010101010101010101010101010101010101010101010101010101&...$01010101?..    //
//    ..!01010101@...%01010101010101010101010101010101010101010101010101010101010101010101@...?01010101$..    //
//    ..?01010101%...%01010101010101010101010101010101010101010101010101010101010101010101@...*01010101@..    //
//    ..?01010101%...%01010101010101010101010101010101010101010101010101010101010101010101@...*01010101@..    //
//    ..?01010101%...%01010101010101010101010101010101010101010101010101010101010101010101@...!01010101@..    //
//    ..!01010101@...%01010101010101010101010101010101010101010101010101010101010101010101@...?01010101$..    //
//    ..+01010101&;..%01010101010101010101010101010101010101010101010101010101010101010101@...$01010101?..    //
//    ..;&01010101!..;+++++++++++++++++++++++++++@0101010101010*+++++++++++++++++++++++++++..;101010101*..    //
//    ...%01010101@..............................$0101010101010;.............................?10101010&;..    //
//    ...*101010101*.............................$0101010101010;............................;&10101010?...    //
//    ....$10101010&;............................$1010101010101;............................%01010101&;...    //
//    ....+010101010%............................$1010101010101;...........................!010101010?....    //
//    .....?101010101?...........................$0101010101010;..........................*101010101@;....    //
//    .....;@010101010?..........................$1010101010101;.........................*0101010101+.....    //
//    ......;&010101010%;........................$1010101010101;........................!0101010101*......    //
//    .......+&010101010@+.......................$1010101010101;......................;%0101010101!.......    //
//    ........+&010101010&!......................$1010101010101;.....................*@0101010101!........    //
//    .........+@0101010101@*....................$0101010101010;...................;%10101010101*.........    //
//    ..........;%01010101010$+..................$1010101010101;.................;?&0101010101@+..........    //
//    ............!&01010101010$*;...............$1010101010101;...............+%&01010101010%;...........    //
//    .............+$101010101010&?+.............$1010101010101;............;!@010101010101@*.............    //
//    ...............*@0101010101010@?*;.........@1010101010101;........;+?$0101010101010&?;..............    //
//    ................;!@10101010101010&$?*+;....+!*!!!!!!!!!**.....;*!$&10101010101010&?;................    //
//    ..................;!@10101010101010101&$%?!*+;;;....;;;++*?%$@01010101010101010&?;..................    //
//    .....................*%&10101010101010101010101&&&&&&010101010101010101010101$!;....................    //
//    .......................;!$&01010101010101010101010101010101010101010101010@?+.......................    //
//    ..........................;*%@1010101010101010101010101010101010101010&$!+..........................    //
//    ..............................+!%@&1010101010101010101010101010101@$!+;.............................    //
//    ..................................;+!?%@&&0101010101010101&&@$%!*;..................................    //
//    .........................................;++**!!!!!!!!**++;;........................................    //
//    ....................................................................................................    //
//    ....................................................................................................    //
//    ....................................................................................................    //
//                                                                                                            //
//                                                                                                            //
////////////////////////////////////////////////////////////////////////////////////////////////////////////////

contract LedgerExtension is
    Ownable,
    ICreatorExtensionTokenURI,
    IERC721CreatorExtensionApproveTransfer
{
    uint256 public constant MAX_SUPPLY = 55;
    address public constant creatorContract = 0x99321B3Ba4F324CAdef4f0f98cC348d3424D01df;

    address public ASCIIGenerator;
    uint256 public totalSupply;
    uint256 public lastUpdatedBlock;

    constructor(address _ASCIIGenerator) {
        ASCIIGenerator = _ASCIIGenerator;
        lastUpdatedBlock = block.number;
    }

    function supportsInterface(bytes4 interfaceId)
        public
        view
        virtual
        override(IERC165)
        returns (bool)
    {
        return
            interfaceId == type(ICreatorExtensionTokenURI).interfaceId ||
            interfaceId == type(IERC721CreatorExtensionApproveTransfer).interfaceId ||
            interfaceId == type(IERC165).interfaceId;
    }

    function setApproveTransfer(address _creator, bool _enabled) external override onlyOwner {
        IERC721CreatorCore(_creator).setApproveTransferExtension(_enabled);
    }

    /**
     * @notice store the current block number after each NFT transfer
     */
    function approveTransfer(
        address _from,
        address _to,
        uint256 _tokenId
    ) external returns (bool) {
        require(msg.sender == creatorContract);
        lastUpdatedBlock = block.number;
        return true;
    }

    /**
     * @notice Batch mint NFTs
     * @param _to address to mint NFTs to
     * @param _count number of NFTs to mint
     */
    function mintBatch(address _to, uint16 _count) public onlyOwner {
        require(totalSupply + _count <= MAX_SUPPLY, 'Ledger: Max Supply Minted');
        totalSupply = totalSupply + _count;
        IERC721CreatorCore(creatorContract).mintExtensionBatch(_to, _count);
    }

    /**
     * @notice return the on-chain metadata for this NFT
     * @param _creator to check the correct creator contract
     * @param _tokenId of the NFT you want the metadata for
     */
    function tokenURI(address _creator, uint256 _tokenId)
        public
        view
        override
        returns (string memory)
    {
        require(_creator == creatorContract);
        return IASCIIGenerator(ASCIIGenerator).generateMetadata(creatorContract, _tokenId, lastUpdatedBlock);
    }

    // ================== ADMIN FUNCTIONS ================== //

    function setASCIIGenerator(address _ASCIIGenerator) external onlyOwner {
        ASCIIGenerator = _ASCIIGenerator;
    }
}
