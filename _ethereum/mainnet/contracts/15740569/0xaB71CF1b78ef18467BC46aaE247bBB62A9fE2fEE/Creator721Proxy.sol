// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

import "./Proxy.sol";
import "./Address.sol";
import "./StorageSlot.sol";

// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@&#AESPASM#&@@@@@@@@@@@@@@@@@@@@@@@@@@@&#AEGIRLS#@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@&G?~^^~!77!~^::~?5#@@@@@@@@@@@@@@@@@@@#PJ!~!BKXAE?4^^4P#@@@@@@@@@@@@
// @@@@@@@@@@G7. ~BK&@@@@@@&B4!.  ~Y#@@@@@@@@@@@@@#Y~..!4B&@@@@@@@&5^ .?#@@@@@@@@@@
// @@@@@@@@&J^:~G@@@@@@@@@@@@@@&5^  .?#@@@@@@@@@G!. .J#@@@@@@@@@@@@@&7  .N@@@@@@@@@
// @@@@@@@@&&&&@@@@@@@@@@@@@@@@@@@5:  .Y@@@@@@B!   ?#@@@@@@@@@@@@@@@@&:  .B@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#~   7&@@@Y.  :G@@@@@@@@@@@@@@@@@@@!   W@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&!   7@@7   ^#@@@@@@@@@@@@@@@@@@@#.   G@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&:   Y?   .B@@@@@@@@@@@@@@@@@@@#~   :#@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@#5JP#&@@@@@5        5@@@@@@@@@@@@@@@@@@@K:   .G@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@&G7.   :DOTS&@@:      ^@@@@@@@@@@@@@@@@@@G~    ~B@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@BJ^    ^Y#&BK??SM~      J@@@@@@@@@@@@@@@&5~    ^5@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@&5~    :?G@@@@@@@&AE~      P@@@@@@@@@@@@@BJ:    ~W&@@@@@@@@@@@@@
// @@@@@@@@@@@@@@B?:    ~5&@@@@@@@@@@@@J      J#@@@@@@@@@&5~    :?G@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@SM.   :?B@@@@@@@@@@@@@@@7      !J?SM#@@@G?:   .~5#@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@#7    :Y#@@@@@@@@@@@@@@@@&:      7@&AE???^    ^JB@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@B:   .K&@@@@@@@@@@@@@@@@@@5       .#@@@@&INVNTG&@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@#:   ^B@@@@@@@@@@@@@@@@@@@#:   7~   ?@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@?   :#@@@@@@@@@@@@@@@@@@@&^   !@#:   5@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@!   ?@@@@@@@@@@@@@@@@@@@B^   ?&@@N:   5@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@Y   N@@@@@@@@@@@@@@@@@@5.  :G@@@@@#!   7#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@&!  .G@@@@@@@@@@@@@@@P~  ^W&@@@@@@@@4^  .Y#@@@@@@@@@@@@@@@#AESPA@@@@@@@@
// @@@@@@@@@@Y:  Y&@@@@@@@@@&BJ^ .!K&@@@@@@@@@@@BK!. .SM#@@@@@@@@@&BK. :4#@@@@@@@@@
// @@@@@@@@@@@&5!.:INVNTATOM~^~?G&@@@@@@@@@@@@@@@@@#57^.:~KWANGYA!^DOTTS@@@@@@@@@@@
// @@@@@@@@@@@@@@&BKWANGYA4SM&@@@@@@@@@@@@@@@@@@@@@@@@@#CONNECTING#!@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

contract Creator721Proxy is Proxy {
    constructor(
        string memory name,
        string memory symbol,
        address creatorImplementation
    ) {
        assert(
            _IMPLEMENTATION_SLOT ==
                bytes32(uint256(keccak256("eip1967.proxy.implementation")) - 1)
        );
        StorageSlot
            .getAddressSlot(_IMPLEMENTATION_SLOT)
            .value = creatorImplementation;
        Address.functionDelegateCall(
            creatorImplementation,
            abi.encodeWithSignature("initialize(string,string)", name, symbol)
        );
    }

    /**
     * @dev Storage slot with the address of the current implementation.
     * This is the keccak-256 hash of "eip1967.proxy.implementation" subtracted by 1, and is
     * validated in the constructor.
     */
    bytes32 internal constant _IMPLEMENTATION_SLOT =
        0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;

    /**
     * @dev Returns the current implementation address.
     */
    function implementation() public view returns (address) {
        return _implementation();
    }

    function _implementation() internal view override returns (address) {
        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;
    }
}
