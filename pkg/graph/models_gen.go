// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package graph

import (
	"time"
)

// A representation of a blockchain smart contract and its associated metadata.
type Contract struct {
	// The network information associated with this contract.
	Network *Network `json:"network"`
	// The blockchain address of the contract.
	Address string `json:"address"`
	// The name of the contract.
	Name             string   `json:"name"`
	BlockNumber      int      `json:"blockNumber"`
	BlockHash        string   `json:"blockHash"`
	TransactionHash  string   `json:"transactionHash"`
	License          *string  `json:"license,omitempty"`
	Optimized        bool     `json:"optimized"`
	OptimizationRuns int      `json:"optimizationRuns"`
	Proxy            bool     `json:"proxy"`
	Implementations  []string `json:"implementations,omitempty"`
	// The version of the Solidity compiler used.
	SolgoVersion *string `json:"solgoVersion,omitempty"`
	// The current processing state of the contract.
	CurrentState string `json:"currentState"`
	// The next expected processing state of the contract.
	NextState string `json:"nextState"`
	// The states that have been completed in processing the contract.
	CompletedStates []string `json:"completedStates"`
	// Indicates if the contract processing has been completed.
	Completed bool `json:"completed"`
	// Indicates if the contract is only partially processed.
	Partial bool `json:"partial"`
	// Indicates if the contract has been corrupted.
	Corrupted bool `json:"corrupted"`
	// The reason for the contract being marked as corrupted.
	CorruptedReason *string `json:"corruptedReason,omitempty"`
	// The timestamp indicating when the contract data was created in the database.
	CreatedAt time.Time `json:"createdAt"`
	// The timestamp indicating the last update time for the contract data in the database.
	UpdatedAt time.Time `json:"updatedAt"`
}

// A connection to a list of contracts, providing pagination capabilities.
type ContractConnection struct {
	// A list of contract edges, representing the contracts in this connection.
	Edges []*ContractEdge `json:"edges"`
	// Metadata that provides information about the current page of results.
	PageInfo *PageInfo `json:"pageInfo"`
}

// Represents an individual contract as part of a paginated list (connection).
type ContractEdge struct {
	// The actual contract data.
	Node *Contract `json:"node"`
	// A unique identifier used for pagination, marking the position of this contract in the overall list.
	Cursor string `json:"cursor"`
}

// A representation of a network with its essential details.
type Network struct {
	// Official (chain) ID of the network.
	NetworkID int `json:"networkId"`
	// Name of the network.
	Name string `json:"name"`
	// Official or recognized name of the network.
	CanonicalName string `json:"canonicalName"`
	// Short symbol representation of the network.
	Symbol string `json:"symbol"`
	// Website URL of the network.
	Website string `json:"website"`
	// Flag indicating if the network is suspended.
	Suspended bool `json:"suspended"`
	// Flag indicating if the network is under maintenance.
	Maintenance bool `json:"maintenance"`
}

// Information about pagination in a connection.
type PageInfo struct {
	// Indicates if there are more items following the current set.
	HasNextPage bool `json:"hasNextPage"`
	// Indicates if there are more items preceding the current set.
	HasPreviousPage bool `json:"hasPreviousPage"`
	// The cursor for the first item in the current set.
	StartCursor string `json:"startCursor"`
	// The cursor for the last item in the current set.
	EndCursor string `json:"endCursor"`
}
